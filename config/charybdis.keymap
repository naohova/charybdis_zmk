#include "keys_de_swiss.h"
#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

// / {
//     chosen { zmk,matrix_transform = &default_transform; };
// };

/ {
    /* input config for mouse move mode */

    trackball_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <0 3 6>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <2>;

        // bindings = <&ib_toggle_layer 7>;
    };

    /* input config for snipe mode */

    trackball_snipe_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <10>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <4>;
    };

    /* input config for mouse scroll mode */

    trackball_scroll_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <9>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_MISC>;
        y-input-code = <INPUT_REL_WHEEL>;
        y-invert;
        bindings = <&ib_wheel_scaler 1 14>;
    };

    /* define a resolution down scaler only for INPUT_REL_WHEEL */

    ib_wheel_scaler: ib_wheel_scaler {
        compatible = "zmk,input-behavior-scaler";
        #binding-cells = <2>;
        evt-type = <INPUT_EV_REL>;
        input-code = <INPUT_REL_WHEEL>;
    };

    /* adjust cooldown waiting period for mouse key layer after activated */

    ib_toggle_layer: ib_toggle_layer {
        compatible = "zmk,input-behavior-tog-layer";
        #binding-cells = <1>;
        time-to-live-ms = <750>;
    };

    combos {
        compatible = "zmk,combos";

        mclc {
            bindings = <&mkp MB3>;
            key-positions = <50 51>;
        };

        to_0 {
            bindings = <&mo 0>;
            key-positions = <50 31>;
        };

        to_1 {
            bindings = <&mo 1>;
            key-positions = <50 32>;
        };

        to_2 {
            bindings = <&mo 2>;
            key-positions = <50 33>;
        };
    };

    behaviors {
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 48 49 50 53 54 51 52 55>;
            hold-trigger-on-release;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <48 49 50 53 54 51 52 55 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 42 43 44 45 46 47 51 52>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Letters {
            bindings = <
&kp ESCAPE      &kp N1  &kp N2  &kp N3        &kp N4        &kp N5           &kp N6      &kp N7     &kp N8     &kp N9   &kp N0    &kp MINUS
&kp TAB         &kp Q   &kp W   &kp E         &kp R         &kp T            &kp Y       &kp U      &kp I      &kp O    &kp P     &kp BSLH
&kp LEFT_SHIFT  &kp A   &kp S   &kp D         &kp F         &kp G            &kp H       &kp J      &kp K      &kp L    &kp SEMI  &kp DOUBLE_QUOTES
&kp LCTRL       &kp Z   &kp X   &kp C         &kp V         &kp B            &kp N       &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp LEFT_ALT
                                &kp LEFT_WIN  &kp SPACE     &mkp LCLK        &mkp RCLK   &kp ENTER
                                              &kp LEFT_ALT  &kp BACKSPACE    &kp DELETE
            >;

            label = "qwerty";
        };

        Numbers {
            bindings = <
&kp TILDE                     &kp EXCL          &kp AT        &kp POUND  &kp DLLR        &kp PRCNT    &kp CARET        &kp AMPS         &kp ASTRK        &kp LPAR         &kp RPAR   &kp UNDER
&kp C_NEXT                    &none             &none         &trans     &none           &none        &kp LBRC         &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp RBRC   &none
&hml DE_POUND_SIGN DE_DOLLAR  &kp LA(LEFT_WIN)  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &none        &kp DE_PLUS      &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp MINUS  &kp EQUAL
&kp DE_CARET                  &none             &none         &none      &none           &none        &kp ASTRK        &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp FSLH   &kp DEL
                                                              &trans     &trans          &trans       &trans           &trans
                                                                         &trans          &trans       &kp KP_NUMBER_0
            >;

            label = "NUMBERS";
        };

        win_lower_layer {
            bindings = <
&kp F12           &kp F1          &kp F2       &kp F3         &kp F4     &kp F5    &kp F6  &kp F7     &kp F8     &kp F9    &kp F10         &kp F11
&kp C_NEXT        &none           &none        &none          &none      &none     &none   &none      &none      &none     &none           &kp C_VOLUME_UP
&kp C_PLAY_PAUSE  &kp LEFT_ARROW  &kp UP       &kp DOWN       &kp RIGHT  &none     &none   &kp RSHFT  &kp RCTRL  &kp RALT  &kp RIGHT_META  &kp K_MUTE
&kp C_PREV        &kp HOME        &kp PAGE_UP  &kp PAGE_DOWN  &kp END    &none     &none   &none      &none      &trans    &none           &kp C_VOLUME_DOWN
                                               &trans         &trans     &none     &trans  &none
                                                              &trans     &trans    &none
            >;

            label = "NAV-FUN";
        };
    };
};
